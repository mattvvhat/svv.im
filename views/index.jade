doctype html
//
  ad
  asdasd
  asd
html(lang="en")
  head
    title svv.im
    link(href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css", rel="stylesheet")
    link(href="/public/css/index.css",      rel="stylesheet")
    link(href="/public/css/planworked.css", rel="stylesheet")
    script(src="/socket.io/socket.io.js")
    script(src="/public/js/vendor/require.js")

    // !!!!

    script(type="x-shader/x-vertex", id="proj.vert").
      uniform mat4  shadowMatrix;

      varying vec2  vUv;
      varying vec3  vNormal;
      varying vec4  vEPosition;
      varying vec3  vEPosition3;
      varying vec4  vAmbientGlobal;
      varying vec4  vProjCoord;

      void main() {
        vUv = uv;
        vEPosition    = modelViewMatrix * vec4(position, 1.0);
        vEPosition3   = vEPosition.xyz/vEPosition.w;
        vProjCoord    = shadowMatrix * vEPosition;
        vNormal       = normalMatrix * normal;
        gl_Position   = projectionMatrix * modelViewMatrix * vec4(position, 1.);
      }

    script(type="x-shader/x-fragment", id="proj.frag").
      uniform sampler2D proj;
      uniform vec3 uLightPos;
      uniform vec3 uLightDir;

      varying vec2  vUv;
      varying vec3  vNormal;
      varying vec4  vEPosition;
      varying vec3  vEPosition3;
      varying vec4  vAmbientGlobal;
      varying vec4  vProjCoord;

      void main () {
        vec3 N = vNormal;
        vec3 v = vEPosition3;

        vec3 L = normalize(-v);
        L = (viewMatrix * vec4(uLightPos, 1.)).xyz;
        vec3 E = normalize(-v); // we are in Eye Coordinates, so EyePos is (0,0,0)
        vec3 R = normalize(-reflect(L, N));

        vec4 amb  = vec4(.1, .1, .1, 1.);
        vec4 diff = vec4(.3, .3, .3, 1.) * max(dot(N, L), 0.0);
        vec4 spec = vec4(.5, .5, .5, 1.);

        vec3 eee = v;
        vec3 nnn = R;
        float angle = dot(eee, nnn);

        vec3 coord = (-vProjCoord.xyz/vProjCoord.w + 1.)/2.;

        if (coord.x >= 0. && coord.x <= 1. && coord.y >= 0. && coord.y <= 1. && angle > 0.) {
           gl_FragColor = texture2DProj(proj, coord);
          gl_FragColor = vec4(1., 1., 1., 1.);
        }
        else {
          gl_FragColor = vec4(0., 0., 0., 1.);
        }
        // gl_FragColor = vec4(x, (x+y)/2., y, 1.0);
      }
  
    // ????

    style.
      #panel {
        position: fixed;
        right:    .50em;
        bottom:   .75em;
      }
      .japanese-text {
        position: fixed;
        top:      -1000px;
        right:    -1000px;
      }
  body
    div.japanese-text.
      2013年に、全く当処分の重要性を否定するが、これはモンスター
      を作成しましたがありません。芸術は無いパンチラインとジョー
      クの取り違えに、技術的なスキルの習得から行ってきました。

      svvimは巧みに流用し。
    // ...
    div.bg#artvvork
      img(src="/public/img/courtneylove.jpg")
    // ...
    nav#panel
      ul.pw-inline-list
        if user
          li
            a(href="/account") <i class="fa fa-user"></i>
          li
            a(href="/logout") <i class="fa fa-sign-out"></i>
        else
          li
            a(href="#", onclick="scConnect();") <i class="fa fa-sign-in"></i>
    // Add jquery
    script(src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js")
    script window.jQuery || document.write('<script src="/public/js/vendor/jquery-1.10.2.min.js"><\/script>')
    // Initialize
    script.
      requirejs.config({
        paths : {
          SoundCloud : 'http://connect.soundcloud.com/sdk',
          three     : '/public/js/vendor/three.min',
          OBJLoader : '/public/js/vendor/OBJLoader',
          App       : '/public/js/custom/App',
          CanApp    : '/public/js/custom/CanApp'
        }
      });

      // SoundCloud
      require([ 'SoundCloud' ], function () {
        SC.initialize({
          client_id     : 'ab03b5afc8765b3b30f97e0440a7151f',
          redirect_uri  : 'http://svv.im/callback'
        });
      });

      function scConnect () {
        SC.connect(function () {
          SC.get('/me', function (me) {
            console.log("!!!");
          });
        });
      };

      // 3D
      require([ 'three', 'App' ], function () {
        require([ 'OBJLoader', 'CanApp' ], function () {

          var s = new CanApp('artvvork');
          s.loop();
          s.stop();
          s.loop();

          $(window).scroll(function (ev) {
            var y = $(window).scrollTop() / ($(document).height() - $(window).height());
            console.log('y = ', y);
            s.set('y', y);
          });

          $(window).keypress(function (ev) {
            switch (ev.which) {
            case 112:
              s.snapshot();
              break;
            }
          });
        });
      });
